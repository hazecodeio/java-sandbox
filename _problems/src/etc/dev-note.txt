
/*
import java.io.*;
        import java.util.*;


//Your class
class Solution {
    public static void main(String[] args) {
        List<String> src = Arrays.asList("dog", "dog", "elephant", "cat", "cat", "cat");
        System.out.println(getMaxOccuringStr(src));
    }


    // write the function to get the maximum occuring string in the given list
    // if multiple strings have same frequency get any one of those
    public static String getMaxOccuringStr(List<String> src){
        String result  = "";
        int i = Integer.MIN_VALUE;

        Map<String, Integer> map = new HashMap<>();

        for(String str : src){

            if(map.containsKey(str))
                map.put(str, map.get(str) + 1);
            else
                map.put(str, 1);

            if (i < map.get(str)){
                i =  map.get(str);
                result = str;
            }


        }

        // int i = Integer.MIN_VALUE;
        // String result = "";
//     for(Map.Entry<String, Integer> entr : map.entrySet()){

//       if (i < entr.getValue()){
//         i = entr.getValue();
//         result = entr.getKey();
//       }


//     }
        //your code goes here

        return result;
    }
}

*/

/*

/*



/**
select * from sales;

create table sales
(
  sale_id            int,
  product_id         int,
  yyyy               int,
  quantity           int,
  price              int
);

insert into sales
values
(1,  100, 2008, 10, 5000),
(2,  100, 2009, 12, 5000),
(3,  100, 2010, 25, 5000),
(4,  100, 2011, 16, 5000),
(5,  100, 2012,  8, 5000),
(6,  200, 2010, 10, 9000),
(7,  200, 2011, 15, 9000),
(8,  200, 2012, 20, 9000),
(9,  200, 2008, 13, 9000),
(10,200, 2009, 14, 9000),
(11,300, 2010, 20, 7000),
(12,300, 2011, 18, 7000),
(13,300, 2012, 20, 7000),
(14,300, 2008, 17, 7000),
(15,300, 2009, 19, 7000)


/*
Write a query to find the number of products sold in each year?
Output:
 yyyy | count
------+-------
 2008 |     3
 2009 |     3
 2010 |     3
 2011 |     3
 2012 |     3
*/

--Your query


        SELECT yyyy, count(product_id) as count FROM sales GROUP BY yyyy ORDER BY yyyy ASC;




/*
Write a SQL query to find the lowest sales of each product?
Output:
 product_id | yyyy | quantity
------------+------+----------
        100 | 2012 |        8
        200 | 2010 |       10
        300 | 2008 |       17
*/

        --Your query

        SELECT product_id, yyyy, min(quantity) as quantity FROM sales GROUP BY product_id;

*/



/**
 # Compare two given files a.txt and b.txt and identify the records that are changed or added.

 a.txt

 col1  col2  col3
 A       1    5
 B       2    6
 C       3    7



 b.txt

 col1  col2  col3
 A      1      5
 B      2      8
 C      3      7
 D      4      9



 Output:

 col1  col2  col3
 B      2      8
 D      4      9


 # Assume files are large
 # Assume col1 is a key column


 aDF.creat

 val df = spark.sql()
 */